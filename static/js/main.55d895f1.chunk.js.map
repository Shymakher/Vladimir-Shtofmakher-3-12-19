{"version":3,"sources":["reducers/autocomplete.js","reducers/currentWeather.js","reducers/fiveDaysOfDaily.js","reducers/favorites.js","reducers/settings.js","reducers/index.js","actions/types.js","store.js","actions/constants.js","actions/cityWeather.js","scss/styled-components/App.js","theme/theme.js","theme/ThemeContext.js","scss/styled-components/Navbar.js","components/Navbar.js","actions/settings.js","components/SearchBar.js","actions/autocomplete.js","components/Spinner.js","utils/renderTemperature.js","utils/convertTemperature.js","scss/styled-components/SelectedCity.js","components/SelectedCity.js","actions/favorite.js","components/Main.js","scss/styled-components/Favorites.js","components/Favorites.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","autocomplete","currentWeather","error","fiveDaysOfDaily","favorites","unit","unitName","isMetric","unitStatus","combineReducers","state","arguments","length","undefined","action","type","payload","Object","objectSpread","concat","toConsumableArray","filter","item","Key","settings","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","API_KEY","getCurrentWeather","cityKey","selectedCity","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","URL","res","cityData","wrap","_context","prev","next","axios","get","sent","Array","isArray","data","abrupt","assign","t0","console","log","stop","_x","this","getFiveDaysOfDaily","_ref2","_callee2","_context2","hasOwnProperty","DailyForecasts","_x2","getCityDetailsByGeoposition","coordinates","_ref3","_callee3","_context3","parseInt","_x3","AppWrapper","styled","_templateObject","props","theme","background","color","themeLight","boxShadow","anchor","themeDark","mode","ThemeContext","React","createContext","dark","toggle","NavbarWrapper","Navbar_templateObject","connect","cnahgeTemparatureUnit","_ref$settings","toggleChecked","themeState","useContext","react_default","createElement","react_router_dom","to","onClick","FormGroup","FormControlLabel","control","Switch","checked","onChange","label","exact","activeClassName","getAutocompleteResults","query","getAutocomplete","_","debounce","e","value","test","className","Autocomplete","id","options","getOptionLabel","option","LocalizedName","onInputChange","style","width","renderInput","params","TextField","variant","fullWidth","Spinner","react_loader_spinner_default","height","renderTemperature","settingsUnit","val","Math","floor","convertFahrenToCels","SelectedCityWrapper","SelectedCity_templateObject","addToFavorites","Temperature","WeatherText","removeFromFavorites","key","components_Spinner","alert","Message","_currentWeather$curre","temperature","isFavorite","find","Value","Unit","elem","index","push","renderFavoriteButton","map","i","dist_default","format","Date","Minimum","Maximum","Main","components_SearchBar","SelectedCity","FavoritesWrapper","Favorites_templateObject","withRouter","history","getWeather","Modal","setAppElement","telAvivData","App","useEffect","navigator","geolocation","permissions","name","then","PermissionStatus","getCurrentPosition","positions","coords","latitude","longitude","es","components_Navbar","react_router","path","component","Favorites","Boolean","window","location","hostname","match","ReactDOM","render","children","_useEffectDarkMode","_React$useState","useState","hasThemeMounted","_React$useState2","slicedToArray","setThemeState","lsDark","localStorage","getItem","useEffectDarkMode","_useEffectDarkMode2","computedTheme","emotion_theming_browser_esm","Provider","setItem","JSON","stringify","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55d895f1.chunk.js","sourcesContent":["import {AUTOCOMPLETE_REQUEST, AUTOCOMPLETE_SUCCESS, AUTOCOMPLETE_FAILED} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  autocomplete: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case AUTOCOMPLETE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    case AUTOCOMPLETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        autocomplete: payload\r\n      };\r\n\r\n    case AUTOCOMPLETE_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state\r\n  }\r\n};","import {\r\n  GET_CURRENT_WEATHER_REQUEST,\r\n  GET_CURRENT_WEATHER_FAILED,\r\n  GET_CURRENT_WEATHER_SUCCESS,\r\n  GET_GEOLOCATION_SEARCH_FAILED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  currentWeather: null,\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case GET_CURRENT_WEATHER_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case GET_CURRENT_WEATHER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentWeather: payload\r\n      };\r\n\r\n    case GET_CURRENT_WEATHER_FAILED && GET_GEOLOCATION_SEARCH_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  GET_FIVE_DAYS_OF_DAILY_SUCCESS,\r\n  GET_FIVE_DAYS_OF_DAILY_REQUEST,\r\n  GET_FIVE_DAYS_OF_DAILY_FAILED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  fiveDaysOfDaily: [],\r\n  loading: false,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case GET_FIVE_DAYS_OF_DAILY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case GET_FIVE_DAYS_OF_DAILY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        fiveDaysOfDaily: payload\r\n      };\r\n\r\n    case GET_FIVE_DAYS_OF_DAILY_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITE} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  favorites: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  switch (type) {\r\n    case ADD_TO_FAVORITES:\r\n      return {\r\n        ...state,\r\n        favorites: [...state.favorites, payload]\r\n      };\r\n\r\n    case REMOVE_FROM_FAVORITE:\r\n      return {\r\n        ...state,\r\n        favorites: state.favorites.filter(item => item.Key !== payload)\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};","import {CHANGE_TEMPERATURE_UNIT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  unit: 'C',\r\n  unitName: 'Cels',\r\n  isMetric: true,\r\n  unitStatus: 'Metric'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const {type} = action;\r\n\r\n  switch (type) {\r\n    case CHANGE_TEMPERATURE_UNIT:\r\n      return {\r\n        ...state,\r\n        isMetric: !state.isMetric,\r\n        unit: !state.isMetric ? 'C' : 'F',\r\n        unitName: !state.isMetric ? 'Cels' : 'Fahren',\r\n        unitStatus: !state.isMetric ? 'Metric' : 'Imperial'\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport autocomplete from './autocomplete';\r\nimport currentWeather from './currentWeather';\r\nimport fiveDaysOfDaily from './fiveDaysOfDaily';\r\nimport favorites from './favorites';\r\nimport settings from './settings';\r\n\r\nexport default combineReducers({\r\n  autocomplete,\r\n  currentWeather,\r\n  fiveDaysOfDaily,\r\n  favorites,\r\n  settings\r\n});","export const AUTOCOMPLETE_REQUEST = \"AUTOCOMPLETE_REQUEST\";\r\nexport const AUTOCOMPLETE_SUCCESS = \"AUTOCOMPLETE_SUCCESS\";\r\nexport const AUTOCOMPLETE_FAILED = \"AUTOCOMPLETE_FAILED\";\r\n\r\nexport const GET_CURRENT_WEATHER_REQUEST = \"GET_CURRENT_WEATHER_REQUEST\";\r\nexport const GET_CURRENT_WEATHER_SUCCESS = \"GET_CURRENT_WEATHER_SUCCESS\";\r\nexport const GET_CURRENT_WEATHER_FAILED = \"GET_CURRENT_WEATHER_FAILED\";\r\n\r\n\r\nexport const GET_FIVE_DAYS_OF_DAILY_REQUEST = \"GET_FIVE_DAYS_OF_DAILY_REQUEST\";\r\nexport const GET_FIVE_DAYS_OF_DAILY_SUCCESS = \"GET_FIVE_DAYS_OF_DAILY_SUCCESS\";\r\nexport const GET_FIVE_DAYS_OF_DAILY_FAILED = \"GET_FIVE_DAYS_OF_DAILY_FAILED\";\r\n\r\n\r\nexport const ADD_TO_FAVORITES = \"SET_FAVORITE\";\r\nexport const REMOVE_FROM_FAVORITE = \"REMOVE_FAVORITE\";\r\n\r\nexport const CHANGE_TEMPERATURE_UNIT = \"CHANGE_TEMPERATURE_UNIT\";\r\n\r\nexport const GET_GEOLOCATION_SEARCH_FAILED = \"GET_GEOLOCATION_SEARCH_FAILED\";","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","export const API_KEY = 'A5KivHhnXGuyU4upTvhgcqhmLM5C8jGA'; // Accu Weather","import {\r\n  GET_CURRENT_WEATHER_REQUEST,\r\n  GET_CURRENT_WEATHER_SUCCESS,\r\n  GET_CURRENT_WEATHER_FAILED,\r\n  GET_FIVE_DAYS_OF_DAILY_FAILED,\r\n  GET_FIVE_DAYS_OF_DAILY_REQUEST,\r\n  GET_FIVE_DAYS_OF_DAILY_SUCCESS,\r\n  GET_GEOLOCATION_SEARCH_FAILED\r\n} from \"./types\";\r\nimport axios from 'axios';\r\nimport {API_KEY} from \"./constants\";\r\n\r\nconst BASE_CURRENT = 'https://dataservice.accuweather.com/currentconditions/v1/';\r\n\r\nexport const getCurrentWeather = (cityKey, selectedCity) => async dispatch => {\r\n  try {\r\n    dispatch({type: GET_CURRENT_WEATHER_REQUEST});\r\n\r\n    const URL = `${BASE_CURRENT}${cityKey}?apikey=${API_KEY}`;\r\n    const res = await axios.get(URL);\r\n\r\n    // Error handler\r\n    if (!Array.isArray(res.data)) {\r\n      return dispatch({\r\n        type: GET_CURRENT_WEATHER_FAILED,\r\n        payload: res.data\r\n      });\r\n    }\r\n\r\n    let cityData = Object.assign({}, res.data[0], {...selectedCity});\r\n    dispatch({\r\n      type: GET_CURRENT_WEATHER_SUCCESS,\r\n      payload: cityData\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_CURRENT_WEATHER_FAILED,\r\n      payload: err.data\r\n    });\r\n  }\r\n};\r\n\r\nconst BASE_FIVE_DAYS = 'https://dataservice.accuweather.com/forecasts/v1/daily/5day/';\r\n\r\nexport const getFiveDaysOfDaily = (cityKey) => async dispatch => {\r\n  try {\r\n    dispatch({type: GET_FIVE_DAYS_OF_DAILY_REQUEST});\r\n\r\n    const URL = `${BASE_FIVE_DAYS}${cityKey}?apikey=${API_KEY}`;\r\n    const res = await axios.get(URL);\r\n\r\n    // Error handler\r\n    if (res.data && res.data.hasOwnProperty('code')) {\r\n      return dispatch({\r\n        type: GET_FIVE_DAYS_OF_DAILY_FAILED,\r\n        payload: res.data\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_FIVE_DAYS_OF_DAILY_SUCCESS,\r\n      payload: res.data.DailyForecasts\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_FIVE_DAYS_OF_DAILY_FAILED,\r\n      payload: err.data\r\n    });\r\n  }\r\n};\r\n\r\nconst BASE_GEOLOCATION = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition/search';\r\n\r\nexport const getCityDetailsByGeoposition = (coordinates) => async dispatch => {\r\n  try {\r\n    const URL = `${BASE_GEOLOCATION}?apikey=${API_KEY}&q=${coordinates}`;\r\n    const res = await axios.get(URL);\r\n\r\n    // Error handler\r\n    if (res.data && res.data.hasOwnProperty('code')) {\r\n      return dispatch({\r\n        type: GET_GEOLOCATION_SEARCH_FAILED,\r\n        payload: res.data\r\n      });\r\n    }\r\n\r\n    dispatch(getCurrentWeather(parseInt(res.data.Key), res.data));\r\n    dispatch(getFiveDaysOfDaily(parseInt(res.data.Key)));\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_GEOLOCATION_SEARCH_FAILED,\r\n      payload: err.data\r\n    });\r\n  }\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const AppWrapper = styled(\"div\")`\r\n  background: ${props => props.theme.background};\r\n  color: ${props => props.theme.color};\r\n  transition: all 0.25s linear;\r\n  h1 {\r\n    color: ${props => props.theme.color}; \r\n  }\r\n  a {\r\n    color: ${props => props.theme.color};\r\n  }\r\n  height: 100vh;\r\n  \r\n  .MuiOutlinedInput-notchedOutline {\r\n    border-color: ${props => props.theme.color};\r\n    \r\n    &:hover {\r\n      border-color: #fff;\r\n    }\r\n  }\r\n  .MuiAutocomplete-popupIndicator {\r\n    color: ${props => props.theme.color};\r\n  }\r\n  \r\n  .MuiSwitch-track {\r\n  background-color: ${props => props.theme.color}\r\n  }\r\n`;","const white = \"#FFFFFF\";\r\nconst black = \"#161617\";\r\nconst gray = \"#F8F8F9\";\r\nconst boxShadowLight=\"#00000029\";\r\nconst boxShadowDark=\"#ffffff70\";\r\nconst anchorLight = '#65656587';\r\nconst anchorDark = '#b6b6b6d6';\r\n\r\nconst themeLight = {\r\n  background: gray,\r\n  color: black,\r\n  boxShadow: boxShadowLight,\r\n  anchor: anchorLight\r\n};\r\n\r\nconst themeDark = {\r\n  background: black,\r\n  color: white,\r\n  boxShadow: boxShadowDark,\r\n  anchor: anchorDark\r\n};\r\n\r\nconst theme = mode => (mode === \"dark\" ? themeDark : themeLight);\r\n\r\nexport default theme;","import React from \"react\";\r\nimport { ThemeProvider as EmotionThemeProvider } from \"emotion-theming\";\r\nimport theme from \"./theme.js\";\r\n\r\nconst defaultContextData = {\r\n  dark: false,\r\n  toggle: () => {}\r\n};\r\n\r\nconst ThemeContext = React.createContext(defaultContextData);\r\nconst useTheme = () => React.useContext(ThemeContext);\r\n\r\nconst useEffectDarkMode = () => {\r\n  const [themeState, setThemeState] = React.useState({\r\n    dark: false,\r\n    hasThemeMounted: false\r\n  });\r\n  React.useEffect(() => {\r\n    const lsDark = localStorage.getItem(\"dark\") === \"true\";\r\n    setThemeState({ ...themeState, dark: lsDark, hasThemeMounted: true });\r\n  }, []);\r\n\r\n  return [themeState, setThemeState];\r\n};\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeState, setThemeState] = useEffectDarkMode();\r\n\r\n  if (!themeState.hasThemeMounted) {\r\n    return <div />;\r\n  }\r\n\r\n  const toggle = () => {\r\n    const dark = !themeState.dark;\r\n    localStorage.setItem(\"dark\", JSON.stringify(dark));\r\n    setThemeState({ ...themeState, dark });\r\n  };\r\n\r\n  const computedTheme = themeState.dark ? theme(\"dark\") : theme(\"light\");\r\n\r\n  return (\r\n    <EmotionThemeProvider theme={computedTheme}>\r\n      <ThemeContext.Provider\r\n        value={{\r\n          dark: themeState.dark,\r\n          toggle\r\n        }}\r\n      >\r\n        {children}\r\n      </ThemeContext.Provider>\r\n    </EmotionThemeProvider>\r\n  );\r\n};\r\n\r\nexport { ThemeProvider, useTheme };","import styled from \"@emotion/styled\";\r\n\r\nexport const NavbarWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 30px;\r\n  box-shadow: ${props => `0 3px 6px ${props.theme.boxShadow}, 0 3px 6px ${props.theme.boxShadow};`};\r\n\r\n  ul {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    li {\r\n    span {\r\n    cursor: pointer;\r\n    }\r\n\r\n      &:nth-of-type(2){\r\n        width: 100px;\r\n      }\r\n\r\n      &:not(:last-child) {\r\n        margin-right: 10px;\r\n      }\r\n\r\n      .is-active {\r\n        color: ${props => props.theme.anchor};\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {cnahgeTemparatureUnit} from \"../actions/settings\";\r\nimport {Switch, FormGroup, FormControlLabel} from '@material-ui/core';\r\nimport {useTheme} from \"../theme/ThemeContext\";\r\nimport {NavbarWrapper} from '../scss/styled-components/Navbar';\r\n\r\nconst Navbar = ({cnahgeTemparatureUnit, settings: {unitName, isMetric}}) => {\r\n  const toggleChecked = () => {\r\n    cnahgeTemparatureUnit();\r\n  };\r\n\r\n  const renderSwitch = () => {\r\n    return (\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={!isMetric} onChange={toggleChecked} color='default'/>}\r\n          label={unitName}\r\n        />\r\n      </FormGroup>\r\n    )\r\n  };\r\n\r\n  const themeState = useTheme();\r\n\r\n  return (\r\n    <NavbarWrapper>\r\n      <Link to=\"/\">Herolo Weather Task</Link>\r\n\r\n      <ul>\r\n        <li><span onClick={themeState.toggle}>{themeState.dark ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}</span>\r\n        </li>\r\n        <li>{renderSwitch()}</li>\r\n        <li><NavLink exact={true} to='/' activeClassName=\"is-active\">Main</NavLink></li>\r\n        <li><NavLink to='/favorites' activeClassName=\"is-active\">Favorites</NavLink></li>\r\n      </ul>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({settings}) => ({settings});\r\n\r\nexport default connect(mapStateToProps, {cnahgeTemparatureUnit})(Navbar);","import {CHANGE_TEMPERATURE_UNIT} from \"./types\";\r\n\r\nexport const cnahgeTemparatureUnit = () => {\r\n  return{\r\n    type: CHANGE_TEMPERATURE_UNIT\r\n  }\r\n};","import React from 'react';\r\nimport _ from 'lodash';\r\nimport {Autocomplete} from '@material-ui/lab';\r\nimport {TextField} from '@material-ui/core';\r\nimport {connect} from 'react-redux'\r\nimport {getAutocompleteResults} from \"../actions/autocomplete\";\r\nimport {getCurrentWeather, getFiveDaysOfDaily} from \"../actions/cityWeather\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({autocomplete, getAutocompleteResults, getCurrentWeather, getFiveDaysOfDaily}) => {\r\n\r\n  const getAutocomplete = _.debounce((e, value) => {\r\n    if (value && /^[a-zA-Z]+$/.test(value)) {\r\n      getAutocompleteResults(value);\r\n    }\r\n  }, 2000);\r\n\r\n  const getWeatherInfo = (e, value) => {\r\n    if (value) {\r\n      const cityKey = parseInt(value.Key);\r\n      getCurrentWeather(cityKey, value);\r\n      getFiveDaysOfDaily(cityKey, value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={autocomplete}\r\n        getOptionLabel={option => option.LocalizedName}\r\n        onInputChange={getAutocomplete}\r\n        onChange={getWeatherInfo}\r\n        style={{width: 300}}\r\n        renderInput={params => (\r\n          <TextField {...params} label=\"Enter City\" variant=\"outlined\" fullWidth/>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  getFiveDaysOfDaily: PropTypes.func.isRequired,\r\n  getCurrentWeather: PropTypes.func.isRequired,\r\n  getAutocompleteResults: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({autocomplete}) => ({\r\n  autocomplete: autocomplete.autocomplete\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAutocompleteResults, getCurrentWeather, getFiveDaysOfDaily})(SearchBar);","import {AUTOCOMPLETE_REQUEST, AUTOCOMPLETE_SUCCESS, AUTOCOMPLETE_FAILED} from \"./types\";\r\nimport {API_KEY} from \"./constants\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'https://dataservice.accuweather.com/locations/v1/cities/autocomplete?';\r\n\r\nexport const getAutocompleteResults = (query) => async dispatch => {\r\n  try {\r\n    dispatch({\r\n      type: AUTOCOMPLETE_REQUEST\r\n    });\r\n\r\n    const URL = `${BASE_URL}apikey=${API_KEY}&q=${query}&language=en-us`;\r\n    const res = await axios.get(URL);\r\n\r\n    dispatch({\r\n      type: AUTOCOMPLETE_SUCCESS,\r\n      payload: res.data\r\n    });\r\n\r\n  } catch (err) {\r\n    console.log(\"Error\", err);\r\n    dispatch({\r\n      type: AUTOCOMPLETE_FAILED,\r\n      payload: err\r\n    });\r\n  }\r\n};","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#9f9f9f\"\r\n        height={50}\r\n        width={80}\r\n      />\r\n    );\r\n};\r\n\r\nexport default Spinner;","import {convertCelsToFahren, convertFahrenToCels} from \"./convertTemperature\";\r\n\r\nexport default (value, unit, settingsUnit) => {\r\n  if (unit === settingsUnit) {\r\n    return `${value} ${unit}`\r\n  } else {\r\n    switch (unit) {\r\n      case 'C':\r\n        return `${convertCelsToFahren(value)} ${settingsUnit}`;\r\n\r\n      case 'F':\r\n        return `${convertFahrenToCels(value)} ${settingsUnit}`;\r\n\r\n      default:\r\n        return 'invalid unit';\r\n    }\r\n  }\r\n};","export const convertFahrenToCels = (value) => {\r\n  return Math.floor((value - 32) / 1.8);\r\n};\r\n\r\nexport const convertCelsToFahren = (val) => {\r\n  return Math.floor((val*1.8) + 32);\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const SelectedCityWrapper = styled('div')`\r\n  box-shadow: ${props => `0 3px 6px ${props.theme.boxShadow}, 0 3px 6px ${props.theme.boxShadow};`};\r\n  padding: 20px;\r\n  width: 75%;\r\n  margin: 0 auto;\r\n\r\n  .general-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n\r\n    ul {\r\n      li {\r\n        &:not(:last-child) {\r\n          margin-bottom: 10px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .favorite {\r\n      cursor: pointer;\r\n      i {\r\n        margin-right: 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .weather-title {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 22px;\r\n    margin-bottom: 25px;\r\n  }\r\n\r\n  .five-days {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n\r\n    .day {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n\r\n      padding: 15px;\r\n      margin-bottom: 10px;\r\n      box-shadow: ${props => `0 1px 3px ${props.theme.boxShadow}, 0 1px 2px ${props.theme.boxShadow};`};\r\n      transition: all ease-in-out .2s;\r\n\r\n      & > :not(:last-child){\r\n        margin-bottom: 10px;\r\n      }\r\n \r\n      &:hover {\r\n        transition: all ease-in-out .3s;\r\n        box-shadow: ${props => `0 7px 14px ${props.theme.boxShadow}, 0 5px 5px ${props.theme.boxShadow};`};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 970px) {\r\n    width: 100%;\r\n  }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport Spinner from './Spinner';\r\nimport {addToFavorites, removeFromFavorites} from \"../actions/favorite\";\r\nimport renderTemperature from '../utils/renderTemperature';\r\nimport {SelectedCityWrapper} from \"../scss/styled-components/SelectedCity\";\r\n\r\nconst CityWeather = ({currentWeather, fiveDaysOfDaily, favorites, addToFavorites, removeFromFavorites, settings}) => {\r\n  if ((currentWeather.loading || fiveDaysOfDaily.loading) && (!currentWeather.error || !fiveDaysOfDaily.error)) {\r\n    return <Spinner/>\r\n  }\r\n\r\n  if ((!currentWeather.loading || !fiveDaysOfDaily.loading) && (currentWeather.error || fiveDaysOfDaily.error)) {\r\n    alert(currentWeather.error.Message);\r\n    return <h1>{currentWeather.error.Message}</h1>\r\n  }\r\n\r\n  if (!currentWeather.currentWeather && fiveDaysOfDaily.fiveDaysOfDaily.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const {LocalizedName, Temperature, WeatherText} = currentWeather.currentWeather;\r\n  const selectedCity = currentWeather.currentWeather;\r\n  const temperature = Temperature[settings.unitStatus];\r\n\r\n  const isFavorite = favorites.favorites.find(item => item.Key === currentWeather.currentWeather.Key);\r\n\r\n  const renderFiveDays = () => {\r\n    return fiveDaysOfDaily.fiveDaysOfDaily.map((item, i) => {\r\n      return (\r\n        <li key={i} className=\"day\">\r\n          <span><Moment format='dddd'>{item.Date}</Moment></span>\r\n          <span>min: {renderTemperature(item.Temperature.Minimum.Value, item.Temperature.Minimum.Unit, settings.unit)}</span>\r\n          <span>max: {renderTemperature(item.Temperature.Maximum.Value, item.Temperature.Minimum.Unit, settings.unit)}</span>\r\n        </li>\r\n      )\r\n    })\r\n  };\r\n\r\n  const handleOnClickFavotires = () => {\r\n    if (!isFavorite) {\r\n      addToFavorites(selectedCity)\r\n    } else {\r\n      removeFromFavorites(selectedCity.Key)\r\n    }\r\n  };\r\n\r\n  const renderFavoriteButton = () => {\r\n    const elem = [];\r\n    let index = 0;\r\n    if (isFavorite) {\r\n      elem.push(\r\n        <i className=\"fas fa-heart\" key={++index}/>,\r\n        <span key={++index}>Remove from Favorites</span>\r\n      )\r\n    } else {\r\n      elem.push(\r\n        <i className=\"far fa-heart\" key={++index}/>,\r\n        <span key={++index}>Add to Favorites</span>\r\n      )\r\n    }\r\n    return elem;\r\n  };\r\n\r\n  return (\r\n    <SelectedCityWrapper>\r\n      <div className=\"general-info\">\r\n        <ul>\r\n          <li><p className=\"city-name\">{LocalizedName}</p></li>\r\n          <li><p className=\"city-temperature\">{temperature.Value} {temperature.Unit}</p></li>\r\n        </ul>\r\n\r\n        <div className=\"favorite\">\r\n          <span onClick={handleOnClickFavotires}>\r\n            {renderFavoriteButton()}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"weather-title\">{WeatherText}</div>\r\n\r\n      <ul className=\"five-days\">\r\n        {renderFiveDays()}\r\n      </ul>\r\n    </SelectedCityWrapper>\r\n  );\r\n};\r\n\r\nCityWeather.propTypes = {\r\n  currentWeather: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = ({currentWeather, fiveDaysOfDaily, favorites, settings}) => ({\r\n  currentWeather, fiveDaysOfDaily, favorites, settings\r\n});\r\n\r\nexport default connect(mapStateToProps, {addToFavorites, removeFromFavorites})(CityWeather);","import {ADD_TO_FAVORITES, REMOVE_FROM_FAVORITE} from \"./types\";\r\n\r\nexport const addToFavorites = (data) => dispatch => {\r\n  let favorite = Object.assign({}, {\r\n    Key: data.Key,\r\n    LocalizedName: data.LocalizedName,\r\n    Temperature: data.Temperature,\r\n    WeatherText: data.WeatherText\r\n  });\r\n\r\n  dispatch({\r\n    type: ADD_TO_FAVORITES,\r\n    payload: favorite\r\n  });\r\n};\r\n\r\nexport const removeFromFavorites = (key) => {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITE,\r\n    payload: key\r\n  }\r\n};","import React from 'react';\r\n\r\nimport SearchBar from '../components/SearchBar';\r\nimport CityWeather from './SelectedCity';\r\n\r\nconst Main = () => {\r\n    return (\r\n      <div className=\"content\">\r\n        <SearchBar/>\r\n        <CityWeather/>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Main;","import styled from \"@emotion/styled\";\r\n\r\nexport const FavoritesWrapper = styled('ul')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  max-width: 75%;\r\n  margin: 0 auto;\r\n\r\n  li {\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: all ease-in-out .2s;\r\n    box-shadow: ${props => `0 1px 3px ${props.theme.boxShadow}, 0 1px 2px ${props.theme.boxShadow};`};\r\n    padding: 20px;\r\n    cursor: pointer;\r\n\r\n    & > :not(:last-child){\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    &:hover {\r\n      transition: all ease-in-out .3s;\r\n      box-shadow: ${props => `0 7px 14px ${props.theme.boxShadow}, 0 5px 5px ${props.theme.boxShadow};`};\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getCurrentWeather, getFiveDaysOfDaily} from \"../actions/cityWeather\";\r\nimport {FavoritesWrapper} from \"../scss/styled-components/Favorites\";\r\n\r\nconst Favorites = ({favorites: {favorites}, settings, getCurrentWeather, getFiveDaysOfDaily, history}) => {\r\n  const getWeather = (key, item) => {\r\n    getCurrentWeather(key, {LocalizedName: item.LocalizedName, Key: item.Key});\r\n    getFiveDaysOfDaily(key);\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <FavoritesWrapper>\r\n      {\r\n        favorites.map((item) => {\r\n          const temperature = item.Temperature[settings.unitStatus];\r\n          return (\r\n            <li onClick={() => getWeather(parseInt(item.Key), item)} key={item.Key}>\r\n              <span>{item.LocalizedName}</span>\r\n              <span>{temperature.Value} {temperature.Unit}</span>\r\n              <span>{item.WeatherText}</span>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </FavoritesWrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({favorites, settings}) => ({settings, favorites});\r\n\r\nexport default connect(mapStateToProps, {getCurrentWeather, getFiveDaysOfDaily})(withRouter(Favorites));","import React, {useEffect} from 'react';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport store from './store';\nimport {getCurrentWeather, getFiveDaysOfDaily, getCityDetailsByGeoposition} from \"./actions/cityWeather\";\nimport Modal from 'react-modal';\n\nimport {AppWrapper} from \"./scss/styled-components/App\";\nimport NavBar from './components/Navbar';\nimport Main from './components/Main';\nimport Favorites from './components/Favorites';\n\nimport './App.css';\nimport './scss/main.scss';\n\nModal.setAppElement('#root');\n\nconst telAvivData = {\n  Key: \"215854\",\n  LocalizedName: \"Tel Aviv\"\n};\n\nfunction App() {\n  useEffect(() => {\n\n    if (!navigator.geolocation) {\n      // \"Geolocation is not supported by this browser\";\n    } else {\n      navigator.permissions &&\n      navigator.permissions.query({name: 'geolocation'}).then(function (PermissionStatus) {\n        if ('granted' === PermissionStatus.state || 'prompt' === PermissionStatus.state) {\n          navigator.geolocation.getCurrentPosition(positions => {\n            const coords = `${positions.coords.latitude},${positions.coords.longitude}`;\n            store.dispatch(getCityDetailsByGeoposition(coords));\n          })\n        } else {\n          // \"Geolocation Permissions Denied\";\n          const cityKey = parseInt(telAvivData.Key);\n          store.dispatch(getCurrentWeather(cityKey, telAvivData));\n          store.dispatch(getFiveDaysOfDaily(cityKey));\n        }\n      })\n    }\n\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <AppWrapper>\n          <NavBar />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/Vladimir-Shtofmakher-3-12-19\" component={Main}/>\n              <Route exact path=\"/Vladimir-Shtofmakher-3-12-19/favorites\" component={Favorites}/>\n            </Switch>\n          </div>\n        </AppWrapper>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from \"./theme/ThemeContext\";\n\nReactDOM.render(\n  <ThemeProvider>\n    <App/>\n  </ThemeProvider>\n  , document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}